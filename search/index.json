[{"content":"Any role that has a direct business goal that doesn\u0026rsquo;t involve full time programming to build the product.\nProgramming is done to understand the product, to communicate the features of the product, to better assist engineering teams, and to guide customers (and their developers). Programming represents less than 20% of the daily responsibilites.\nRoles Revenue side:\nCustomer Success Engineer Solutions Architect Sales Engineer Support side:\nTechnical Support Engineer Developer as a customer/stakeholder:\nDeveloper Evangelist/Advocate or DevRel Technical Community Manager Technical Content Writer Product side:\nProduct Manager who wants to get their hands dirty Product Marketing Manager who wants to get their hands dirty What makes these roles special I believe that there is a special breed of folks out there who are usually self-taught programmers and who enjoy both coding and the business side of things. These roles could be perfect for you as they bring together the best of both worlds\nAs a self-taught developer, I honestly cannot see myself working in a full-time programming environment. Nor am I comfortable with revenue or management roles where I don\u0026rsquo;t get to work closely product team. Programming, to me, is like magic, while business operations feel quite natural and impactful on an organizational scale. By being in the business side, I know how I am impacting the company, how our product is being used by customers, and I can incorporate ideas directly into our product while being concious about the engineering investments, timelines and realities.\nFor my personality, I do not believe in a strong hard line between technical and non-technical departments. I think that if I draw lines like that, as a business team guy, I will fail to empathize with the folks who keep the business running, and as a programmer, I will forget who I am working for at the end of the day: the customers and developers using our product.\nI understand that there are rockstar sales folks and engineering wizards who just want to focus on their stuff uninterrupted and make significant impacts to the organization. But yeah, I am not that kind of guy, and maybe you are not as well.\n","date":"2023-07-04","permalink":"https://anyfactor.github.io/posts/business_programming_hybrid/","tags":["business"],"title":"Business programming hybrid roles: The best of both world"},{"content":"A laundry list of things I need to do get this site up and running\nâœ… Setup the site (duh) Setting up the Hugo site âœ… Writing a powershell script to run the publish commands in sequence Powershell script for Hugo Git deployment Completing the site setup with respect to the theme and adding content hugo new should have metadata and \u0026lt;!--more--\u0026gt; present Figure out SEO stuff: Perfect SEO Meta Tags with Hugo Better post linking somehow ðŸ¤”. Writing link markdown is tedius, dropping a link should have title with post link hyperlinked Maybe a infinite scrolling blog page? ","date":"2023-07-02","permalink":"https://anyfactor.github.io/posts/hugo_site_tasks/","tags":["hugo"],"title":"Improving this Hugo site"},{"content":"Using ChatGPT I created a simple powershell script for deploying the site.\nGoal Take a commit message Generate the static webpages Commit+Publish the static webpages to the prod repo on the public directory that is a submodule Goes back to the root directory (dev repo) and pushes that to origin as well. Pro0mpting Basic prompt as a starter\u0026hellip;\ncreate a simple powershell script that takes an input an adds \u0026ldquo;Hello\u0026rdquo; to it\nSo it works\na script that that takes a commit message, the git adds, commits and pushes the repo. Then cds into the \u0026ldquo;public\u0026rdquo; directory and does the same.\nAlmost there\nBefore running the git commit on the root directory it runs hugo -t fuji\nSome minor fixes Variable declaration needed to be fixed: \u0026quot;....$command:\u0026quot; â†’ \u0026quot;....'$command':\u0026quot; Need to commit the submodule git repo first, then to the root directory And that\u0026rsquo;s about it git_publish.ps1\n# Function to execute Git commands function Invoke-GitCommand { param ( [Parameter(Mandatory=$true)] [string]$Command ) $output = git $Command 2\u0026gt;\u0026amp;1 if ($LASTEXITCODE -ne 0) { Write-Host \u0026#34;Error executing git \u0026#39;$Command\u0026#39;:\u0026#34; Write-Host $output exit 1 } } # Prompt for commit message $commitMessage = Read-Host \u0026#34;Enter the commit message\u0026#34; # Execute `hugo -t fuji` command hugo -t fuji # Change directory to \u0026#34;public\u0026#34; Set-Location \u0026#34;public\u0026#34; # Git commands for the \u0026#34;public\u0026#34; directory git add -A git commit -m $commitMessage git push # Change directory to \u0026#34;root\u0026#34; Set-Location .. # Git commands for the root directory git add -A git commit -m $commitMessage git push You run .\\git_publish.ps1 and give the commit message and then it just works.\n","date":"2023-07-02","permalink":"https://anyfactor.github.io/posts/powershell_script_for_git_deployment/","tags":["hugo","chatgpt"],"title":"Powershell script for Hugo Git deployment"},{"content":"Video summary (in bullet points) of Creating a Blog with Hugo and Github in 10 minutes by Ryan Schachte\nSetup Create two repository: One for our Hugo code, your development repo, we will be calling this the dev repo Another for the deployed static rendered webpages, the production repo: \u0026lt;name_of_the_site\u0026gt;.github.io, we will be calling this the prod repo Hugo Stuff I will be installing Hugo in Windows 10, using chocolatey: choco install hugo-extended clone the dev repo and cd into that Create the hugo site there with hugo new site \u0026lt;name_of_the_site\u0026gt; [0] cd into the newly created \u0026lt;name_of_the_site\u0026gt; directory Selecting a theme From your web browser, choose a theme from here: https://themes.gohugo.io/ Follow the instructions to install the theme [1] Edit the hugo.toml file: baseURL = \u0026#34;https://anyfactor.github.io/\u0026#34; languageCode = \u0026#34;en-us\u0026#34; title = \u0026#34;Anyfactor\u0026#39;s blog\u0026#34; theme = \u0026#34;fuji\u0026#34; I am using the fuji theme\nDevelopment preview: hugo server Creating a new post: hugo new posts/\u0026lt;name_of_post\u0026gt;.md Edit the markdown blog post. Remove draft: true from the metadata section. Add the tags and description metadata. Deployment Adding the production site repo: Have atleast one commit on the prod repo for further future commits. You can clone the repo, run touch README.md and push the main branch. On the dev repo add the prod repo as a submodule: git submodule add -b main \u0026lt;prod_repo_url\u0026gt; public. [2] The above command will bring the main branch of the prod_repo to the public directory The public directory will contain the rendedred static webpages. When you render the static webpages the prod_repo contents will be written. Then you can push rendered static webpages to the web. To generate the static files into the public directory: hugo -t fuji. -t stands for theme. cd into the public directory where prod repo website lives. Git add â†’ commit â†’ push to publish the new site. cd back into the previous (/root) directory. Git add â†’ commit â†’ push the dev repo. Notes [0] Create site first then add git\nCreate the site first, then inti the git repo there.\n[1] Installing Fuji Theme [Repo]\nAdding the theme: git submodule add https://github.com/dsrkafuu/hugo-theme-fuji.git themes/fuji Summary splitting. Add the summary section then add \u0026lt;!--more--\u0026gt; then the main content : https://github.com/dsrkafuu/hugo-theme-fuji#-notice Sample post metadata: title: \u0026#34;Setting up Hugo\u0026#34; date: 2023-07-01T23:06:13+06:00 description: \u0026#34;Creating a new hugo site using Ryan Schachte\u0026#39;s tutorial\u0026#34; tags: [\u0026#39;hugo\u0026#39;] [2] master vs main\nI need to declare the master branch here as my prod repo is older.\n","date":"2023-07-01","permalink":"https://anyfactor.github.io/posts/setting_up_hugo/","tags":["hugo"],"title":"Setting up Hugo"}]