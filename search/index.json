[{"content":"Anything that is too open ended is generally a bad feedback.\nThe two kinds of feedback I absolutely hate getting are the ones that are open ended. I have dealt with enough freelance clients in my life who have asked me the question, \u0026ldquo;Can you make it more\u0026hellip;?\u0026rdquo;. My guy, do you think I have a list of gerunds that I go through while doing the technical work? I have heard things like \u0026ldquo;convincing,\u0026rdquo; \u0026ldquo;appealing,\u0026rdquo; \u0026ldquo;efficient,\u0026rdquo; and whatever. What am I supposed to do with that information?\nThese open-ended feedbacks are usually shit because the reaction is always predictable. My follow-up question is always, \u0026ldquo;What do you mean by\u0026hellip;?\u0026rdquo; Then they will give the actual issues with the work. Now, instead of one message of feedback, we now have three messages.\nIn asynchronous communication messages like emails, this takes up time and mental capacity. In synchronous communication, this takes up patience. Avoid open-ended questions at all costs when managing someone. Either be specific or ask them to go through their process. Not every, if not no, task is a process of self-discovery or a spiritual and mental idea of \u0026ldquo;why this is not more this or that.\u0026rdquo; As a manager, always assume the engineer has done their homework.\n","date":"2024-01-06","permalink":"https://anyfactor.github.io/posts/open_ended_review_feedbacks_are_shit/","tags":["tweet","management"],"title":"Shitty mgmt checklist: Open ended"},{"content":"Rage-building a startup to success is a thing and it is undoubtedly the best and most guranteed way to start building.\nWe use a SAAS tool at work that doesn\u0026rsquo;t work. It is annoying, buggy, and unreliable. I have reached out to their support a few times, but the product is just crap and support can do nothing beyond \u0026ldquo;I have let our engineers know\u0026rdquo;.\nThere is no connection between product development, UX, engineering, customer feedback or anything else. The company heavily focuses on enterprise sales, and nobody cares about the product. Their team talks about industry trends and value proposition, but the product is borderline unusable. Their company is invested in list articles for SEO and interviews about tech-shit disruption.\nFrom an outside perspective, it almost feels like they have a monopoly over the industry and their entire strategy is focused on enterprise sales and reselling through consultants and agencies. Nobody actually cares about the product. It is a game of slipping in a SAAS product on payroll of a massive company.\nI have gone back and forth with their support, reached out to their PM, and even have emailed the CEO. I sent them a document listing my grievances, but I have received no response.\nInitially, I thought why not create a UX based on their API. However, their API is locked. Then, I considered reverse engineering the website to build my own DIY API. But then I realized\u0026hellip; why? Why not just build an entirely new and improved version of their product that is actually usable and approachable? So, that\u0026rsquo;s what I am doing this weekend.\n","date":"2023-08-31","permalink":"https://anyfactor.github.io/posts/ragebuilding_startup/","tags":["businesss"],"title":"Ragebuilding a startup to success"},{"content":"The successful exit startup rulebook. Creating a startup based on a feature of a big software.\nMassive software led big company that does everything [1] B dollar valuation, publicly traded company Runs an entire industry It is missing a feature [2] that many users wants. They are not implementing the feature because they are too massive and too busy You create a startup that replicates \u0026lt;1% of the big software but with that feature at the core Get seed round funded by YC or your favorite Twitter VC/Thoughtleader. Barely get enough users to run the business sucessfully. Get series A funded. Get an office in SF. Hire more folks - 20% PMs, 30% Engineers, 30% Marketing and 20% Sales mix. Everything else is done by contractors, agencies, SAASes and consultants that your investor recommended. Many users but most of them are on free tier. The startup is hemorrhaging money. VCs don\u0026rsquo;t want to raise another round. Do mutliple rounds of layoff over a few weeks. Essentially do 3-12% layoffs over a period of time that adds up to 87%. VCs are proud of you because it is traumatizing to fire someone over zoom and you didn\u0026rsquo;t flinch. VCs are proud but still can\u0026rsquo;t do Series B. VCs are start messaging people on LinkedIn to offload their investment. The publish a forbes article about how bold and disruptive your startup is. Through a game of telephone they bring the massive software [1] folks to the table. They try to sell the idea of \u0026ldquo;you are getting the idea, the founder and THE PEOPLE.\u0026rdquo; The founder will join as a VP or Sr. PM of a division that is essentially integrating that feature[2] to the software. Startup workforce are absorbed everywhere in the company, only some work at your division. Big company goes for acquisition. Does a round of PR. The CEO makes a Twitter post about the acquisition. Founder essentially did years long take home assessment for a PM job that he labelled as a startup, but at the end of the day he made some money although the retention contract is brutal. ","date":"2023-08-31","permalink":"https://anyfactor.github.io/posts/becoming_startup_millionaire/","tags":["rant"],"title":"Becoming a startup millionaire"},{"content":"Corporate memes are either not funny or can\u0026rsquo;t risk offending someone\nThe problem lies in the definition of funny things - they are funny because they make fun of something. Merely using a meme template to praise your company does not qualify as a meme; it is just sloppy marketing. Also cringe is lowest form of humor and presentation memes\u0026hellip;. don\u0026rsquo;t get me started on them.\nNowadays, businesses have a wide variety of stakeholders, and it is not a good idea to make fun of anything because you don\u0026rsquo;t know who you might offend. The attitude of \u0026ldquo;dabbing\u0026rdquo; on the legacy providers, solutions and competitor via \u0026ldquo;shitposting\u0026rdquo; works until you start to collect that first dime in revenue. Insulting someone\u0026rsquo;s existing solutions can do more harm by alienating your existing userbase or worse potential customers.\nSo, in this case, the convenient and simple path is to avoid making corporate memes. I do believe \u0026ldquo;meme-ing into relevancy is a thing\u0026rdquo;, but most of the time you are going to meme your company or career into jeopardy.\nI used chatGPT grammar checker to tone this blog post to be corporate friendly.\n","date":"2023-08-08","permalink":"https://anyfactor.github.io/posts/on_corporate_memes/","tags":["tweet"],"title":"On corporate memes"},{"content":"Grammarly still sucks. And Go\u0026hellip;. when you don\u0026rsquo;t want to rewrite things in Rust. This is a part 2 of an another blog.\nContinuing from the last part where I created this using mostly PowerShell.\nEdit (July 23, 2023 (Sunday)) - I have polished my GitHub repo a bit: https://github.com/anyfactor/Chatgpt_grammar_checker\nWhat changed? The PowerShell script was bad:\nIt was unreadable to me atleast. The JSON parsing was unnecessarily verbose. I actually need async support. Setting content in clipboard was a hit or miss. The AHK script was bad:\nI actually need some kind of async support. I don\u0026rsquo;t need the msgbox alert system because when running the operation through cmd, the terminal pops up anyway. It was copying the corrections made Corrections Made section which was annoying. Current state of the script Autohotkey F8::{ ;copies the content from current selection A_Clipboard := \u0026#34;\u0026#34; ; Start off empty to allow ClipWait to detect when the text has arrived. Send \u0026#34;^c\u0026#34; ClipWait ; Wait for the clipboard to contain text. ; async operation via threading of some sort ; https://www.reddit.com/r/AutoHotkey/comments/mqbyfz/can_i_have_multiple_functionsactions_running_at/ SetTimer trayalert, -1, 1 SetTimer core_grammar_operation, -1, 1 return core_grammar_operation(){ ; runs the go project RunWait A_ComSpec \u0026#39; /c \u0026#34;\u0026lt;path_to_file_main.exe\u0026gt;\u0026#34;\u0026#39; ; delay before content is posted. Sleep 800 Send \u0026#34;^v\u0026#34; } trayalert(){ ; tray alert for script being copied input_prompt := A_Clipboard TrayTip \u0026#34;Grammar Check Triggered\u0026#34;, input_prompt Sleep 4000 ; Let it display for 3 seconds. HideTrayTip } HideTrayTip() { ; tray alert helper function to hide the tray TrayTip ; Attempt to hide it the normal way. if SubStr(A_OSVersion,1,3) = \u0026#34;10.\u0026#34; { A_IconHidden := true Sleep 200 ; It may be necessary to adjust this sleep. A_IconHidden := false } } } Breakdown:\nI opted to remove the msgbox for showing the grammar correction because it wasn\u0026rsquo;t needed. The cmd section triggered the terminal where I can show the grammar correction bit from go. I implemented a threading operation for running the go code and triggering the trayalert simultaneously. I have no clue how threading/async in AHK, I just winged it. It pastes only the corrected sections from the clipboard. Go First of all, the Go script is amazing! However, if you have any optimization advice, it would be greatly appreciated. I wrote the script entirely using ChatGPT prompts. This script looks long, but it is kidna self explantory.\npackage main import ( \u0026#34;encoding/json\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;net/http\u0026#34; \u0026#34;strings\u0026#34; \u0026#34;github.com/atotto/clipboard\u0026#34; ) func copy_to_clipboard(text string) { err := clipboard.WriteAll(text) if err != nil { fmt.Println(\u0026#34;Error copying text to clipboard:\u0026#34;, err) return } } func extract_text(text, stoppingPointText string) string { splitText := strings.Split(text, stoppingPointText) if len(splitText) \u0026gt; 0 { result := strings.TrimSpace(splitText[0]) result = strings.Trim(result, \u0026#34;\\\u0026#34;\u0026#39;\u0026#34;) return result } return \u0026#34;\u0026#34; } func main() { token := \u0026#34;\u0026#34; clipboard_content, err := clipboard.ReadAll() if err != nil { fmt.Println(\u0026#34;Error reading clipboard:\u0026#34;, err) return } fmt.Println(\u0026#34;Clipboard content:\\n\\n\u0026#34;, clipboard_content) headers := map[string]string{ \u0026#34;Content-Type\u0026#34;: \u0026#34;application/json\u0026#34;, \u0026#34;Authorization\u0026#34;: \u0026#34;Bearer \u0026#34; + token, } jsonData := map[string]interface{}{ \u0026#34;model\u0026#34;: \u0026#34;gpt-3.5-turbo\u0026#34;, \u0026#34;messages\u0026#34;: []map[string]string{ {\u0026#34;role\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;Fix the grammar errors and at the end list out the mistakes made:\\n\\n \u0026#34; + clipboard_content}, }, } jsonValue, _ := json.Marshal(jsonData) req, err := http.NewRequest(\u0026#34;POST\u0026#34;, \u0026#34;https://api.openai.com/v1/chat/completions\u0026#34;, strings.NewReader(string(jsonValue))) if err != nil { fmt.Println(\u0026#34;Error creating HTTP request:\u0026#34;, err) return } for key, value := range headers { req.Header.Set(key, value) } client := \u0026amp;http.Client{} response, err := client.Do(req) if err != nil { fmt.Println(\u0026#34;Error making HTTP request:\u0026#34;, err) return } defer response.Body.Close() var responseData map[string]interface{} err = json.NewDecoder(response.Body).Decode(\u0026amp;responseData) if err != nil { fmt.Println(\u0026#34;Error decoding JSON response:\u0026#34;, err) return } choices := responseData[\u0026#34;choices\u0026#34;].([]interface{}) firstChoice := choices[0].(map[string]interface{}) message := firstChoice[\u0026#34;message\u0026#34;].(map[string]interface{}) content := message[\u0026#34;content\u0026#34;].(string) if strings.Contains(content, \u0026#34;Mistakes made:\u0026#34;) { extractedText := extract_text(content, \u0026#34;Mistakes made:\u0026#34;) copy_to_clipboard(extractedText) fmt.Println(\u0026#34;\\n\\nExtracted content:\u0026#34;, extractedText) } else if strings.Contains(content, \u0026#34;Mistakes:\u0026#34;) { extractedText := extract_text(content, \u0026#34;Mistakes:\u0026#34;) copy_to_clipboard(extractedText) fmt.Println(\u0026#34;\\n\\nExtracted content:\u0026#34;, extractedText) } else { fmt.Println(\u0026#34;Text mismatch\u0026#34;) return } fmt.Println(\u0026#34;\\n\\n\u0026#34; + content) var exit_statement string fmt.Scanln(\u0026amp;exit_statement) fmt.Println(exit_statement) } Breakdown:\nRetrieves the incorrect section from the clipboard. Makes an API call to ChatGPT. Displays the response from the API call. Extracts the corrected version from the API response and removes the \u0026ldquo;Mistakes made\u0026rdquo; section. Copies the extracted correct section to the clipboard. One thing I don\u0026rsquo;t like:\nI would have preferred to write this section:\nif strings.Contains(content, \u0026#34;Mistakes made:\u0026#34;) { extractedText := extract_text(content, \u0026#34;Mistakes made:\u0026#34;) copy_to_clipboard(extractedText) fmt.Println(\u0026#34;\\n\\nExtracted content:\u0026#34;, extractedText) } else if strings.Contains(content, \u0026#34;Mistakes:\u0026#34;) { extractedText := extract_text(content, \u0026#34;Mistakes:\u0026#34;) copy_to_clipboard(extractedText) fmt.Println(\u0026#34;\\n\\nExtracted content:\u0026#34;, extractedText) } else { fmt.Println(\u0026#34;Text mismatch\u0026#34;) return } like this:\nif strings.Contains(content, \u0026#34;Mistakes made:\u0026#34;) { extractedText := extract_text(content, \u0026#34;Mistakes made:\u0026#34;) } else if strings.Contains(content, \u0026#34;Mistakes:\u0026#34;) { extractedText := extract_text(content, \u0026#34;Mistakes:\u0026#34;) } else { fmt.Println(\u0026#34;Text mismatch\u0026#34;) return } copy_to_clipboard(extractedText) fmt.Println(\u0026#34;\\n\\nExtracted content:\u0026#34;, extractedText) But I am getting unused variable error, which is fine, I guess. But, I kinda want to ditch my variables this way sometimes, because I write mostly Python code.\nWhy not Rust? I tried Rust for this project, but it was quite painful. ChatGPT support for generating good Rust code needs work. And trust me when I say this, I don\u0026rsquo;t know how to write Go code. But I was able to cobble up something, didn\u0026rsquo;t I? But I don\u0026rsquo;t have that confidence to debug ChatGPT generated Rust code.\nWriting async code is challenging. I encountered a couple of bugs while working with the clipboard, and I feel like Rust is overly statically typed for scripting. Go is not cool, but it works. I would like to use goroutines for some section of the code.\nConclusion Simple quality of life improvements include exiting the terminal prompt if the user doesn\u0026rsquo;t press enter within a certain period. Display a meme or joke on the tray alert while the script runs in the background. Since we are making an API call, every second feels like an eternity. So need something look at. I don\u0026rsquo;t think I can optimize it further, as the bottleneck is in the API call. But if you have any advice, feel free to let me know. Footnote Responses to my script:\nThen why send your text to a slow third-party in the first place? There are craptons of spelling and grammar checkers available which will work offline, be significantly faster, consume less resources, and not change the meaning of your text. We solved this problem decades ago, we don’t need to shove AI in everything.\nMy response:\nGrammar checkers are essentially typo checkers and are not context aware to be truly grammar checkers. Context aware grammar checking means the program has to consider each line of text and identify grammar mistakes. As traditional grammar checkers check typos in real time, every mistake you do is flashed in front of you. You have to stop evaluate, fix and continue. This is distracting.\rMy solution is to get your thoughts immediately out of your head in a big chunk. Check the grammar of that chunk of text in a single button press wait a few seconds and then just paste the text.\rThe tone shift is good in technical writing, but in forum style communication it kinda dehumanizes the comment. But it is not a major thing.\rI use grammarly pro, but I find this solution to be extremely robust as this solution is platform and software agnostic. Like writing in my text editor - LiteXL. I have no desire to send what I write to third-parties I don’t trust.\nMy response:\nI honestly find this response ironic, considering the person said that in open internet forum which is being scraped by dozens, if not hundreds of third party services.\nThe problem with this statement is that \u0026ldquo;it is my choice\u0026rdquo; that I am not sending the data third party providers. But in reality adopting a system that truly takes away your writing quirks, emotion and anything that is truly personal should be embraced if you are that conscious about data privacy philosophy. You chose one evil over several and just say this is not me on the internet.\nConclusion:\nOpen source evengelism sucks.\n","date":"2023-07-22","permalink":"https://anyfactor.github.io/posts/upgrading_my_grammar_automation_script/","tags":["programming","chatgpt"],"title":"Made a grammar checker script with ChatGPT powered by - Go and Autohotkey"},{"content":"Because Grammarly is just terrible even the pro version. Toolstack - Powershell and Autohotkey.\nMy grammar is horrible. Well, not horrible just lazy, to be honest. I just tend to forget about writing small syllable words from time to time, like \u0026rsquo;to\u0026rsquo;, \u0026lsquo;on\u0026rsquo;, \u0026rsquo;the\u0026rsquo; etc. If English is your second language, you know what I am talking about. In my head, I can phrase things correctly, but when I am writing, I tend to write in keywords, if that makes any sense.\nThe plan is to replicate the Grammarly experience to some extent. Grammarly checks writing in real time. Implementing this feature is almost impossible for me, and fortunately, I find it distracting. I just find Grammarly to be distracting with their forced positivity expressions and lacking in quality compared to ChatGPT. PERIOD. Therefore, the plan is to:\u0026quot;\nSelect a section of text Press a button Get ChatGPT to fix it Copy the correct text And at the end of it tell me what went wrong Autohotkey script Code first\nF8::{ input_prompt := A_Clipboard A_Clipboard := \u0026#34;\u0026#34; ; Start off empty to allow ClipWait to detect when the text has arrived. Send \u0026#34;^c\u0026#34; ClipWait ; Wait for the clipboard to contain text. TrayTip \u0026#34;Grammar Check Triggered\u0026#34;, \u0026#34;Grammar check command recieved please wait...\u0026#34; Sleep 3000 ; Let it display for 3 seconds. HideTrayTip RunWait A_ComSpec \u0026#39; /c cd \u0026#34;\u0026lt;path_to_powershell_script\u0026gt;\u0026#34; \u0026amp; powershell.exe .\\test.ps1\u0026#39; MsgBox input_prompt \u0026#34;`n\u0026#34;`n\u0026#34;\u0026#34; A_Clipboard ; Copy this function into your script to use it. HideTrayTip() { TrayTip ; Attempt to hide it the normal way. if SubStr(A_OSVersion,1,3) = \u0026#34;10.\u0026#34; { A_IconHidden := true Sleep 200 ; It may be necessary to adjust this sleep. A_IconHidden := false } } } Breakdown:\nA_Clipboard ⇒ As per docs, A_Clipboard is a built-in variable that reflects the current contents of the Windows clipboard if those contents can be expressed as text. RunWait A_ComSpec ⇒ Runs my powershell script through commandline. Tray stuff ⇒ Just to let me know the script has been triggered. It is helpful as ChatGPT needs some to time to process and AHK sometimes just doesn\u0026rsquo;t work. IDK why. Powershell Code:\n$clipboardContent = Get-Clipboard $OPENAI_API_KEY = \u0026#34;\u0026#34; $headers = @{ \u0026#34;Authorization\u0026#34; = \u0026#34;Bearer $OPENAI_API_KEY\u0026#34; } $data = @{ model = \u0026#34;gpt-3.5-turbo\u0026#34; messages = @( @{ role = \u0026#34;user\u0026#34; content = \u0026#34;Fix the grammar errors and at the end list out the mistakes made:`n`n \\\u0026#39;{0}\\\u0026#39;\u0026#34; -f $clipboardContent } ) } # Convert the hashtable to JSON $body = $data | ConvertTo-Json $response = Invoke-RestMethod \u0026#34;https://api.openai.com/v1/chat/completions\u0026#34; ` -Method Post ` -Headers $headers ` -ContentType \u0026#34;application/json\u0026#34; ` -Body $body # $jsonData = $response | ConvertTo-Json $jsonData = $response.choices[0].message.content Write-Output $jsonData Set-Clipboard -Value $jsonData Breakdown:\nI initially wrote and tested the code with Python. I used ChatGPT\u0026rsquo;s documentation and converted the curl command to powershell using this tool. Then I fiddled with ChatGPT to come up with this solution. So how does it work First, select the text and then press F8. After that, my AHK script is triggered. AHK runs ctrl+c to copy the selected text. It stores the selected text in the variable input_prompt. Then the PowerShell script is triggered via cmd. The PowerShell script takes the content from the clipboard. It then calls the ChatGPT API with the prompt: \u0026ldquo;Fix the grammar errors and at the end list out the mistakes made: {text}\u0026rdquo;. It then receives the results and stores them to the clipboard. In AHK, we show the input prompt and the result prompt. The clipboard contains the result prompt as well. Then just paste the grammar-corrected statement. At the end of the day I could have written only a Python script and saved myself from the hassle of dealing with PowerShell. I could have written this in Rust and made it efficient and cross-platf\u0026hellip; who am I kidding? I\u0026rsquo;m glad there is no async stuff. The prompt makes the result too professional, which I don\u0026rsquo;t like. I am not planning to use this often, except for technical writing, which I do A LOT and surprisingly get paid for. You should be using a cliboard manager like Ditto if you are using this. I will try to only put the \u0026ldquo;mistakes\u0026rdquo; section on the messagebox and not copy it. I will also remove the double quotes from the output section. This thing doesn\u0026rsquo;t deserve it\u0026rsquo;s Github Repo, but I will make one anyway.\nhttps://github.com/anyfactor/Chatgpt_grammar_checker\nAnyway if you have any feedback let me know. Thanks.\n","date":"2023-07-16","permalink":"https://anyfactor.github.io/posts/chatgpt_grammar_checker/","tags":["programming","chatgpt"],"title":"DIYing a grammar checker with ChatGPT - Part 1"},{"content":"The big 3 cool languages for making binary executables. Learning in the wrong way with ChatGPT.\nWhy these 3? The goal is to create binary executables for all platforms. So, I picked these three:\nGo: Because everyone uses it. Rust: Because the cool kids tell you they use it. Nim: Because I am a Python developer. Honorable mention:\nTypescript: The only way to create an executables with Typescript is with deno compile. Check out my deno compile writeup to see why I will not touch it again. Python: Not worth exploring it here. Zig: Everyone says it is the new cool thing, but let\u0026rsquo;s wait till 2030. Disclaimer: I will be using ChatGPT to tutor me through this process.\nNim ChatGPT spits out this code:\nimport os proc printHello(input: string) = echo \u0026#34;Hello, \u0026#34; \u0026amp; input proc main() = var input: string echo \u0026#34;Enter your name:\u0026#34; readLine(input) printHello(input) when isMainModule: main() So, ChatGPT starts with bad code.\nUnnecessary import of the os library. Error related to readline. proc readLine(f: File): string required type for f: File but expression 'input' is of type: string The variable input is being declared then subsequently that variable is passed to the readLine function?? Needs better type declaration and assignments. Although I like they are are using isMainModule here, which I believe is the same as if __name__ == '__main__' of Python.\nThe acceptable code:\nproc printHello(input: string) = echo \u0026#34;Hello, \u0026#34; \u0026amp; input proc main() = echo \u0026#34;Enter your name:\u0026#34; const input: str = readLine(stdin) printHello(input) when isMainModule: main() Running the script:\nnim c -r hello.nim For release build:\nnim c -d:release hello.nim Rust Moving on to Rust.\nuse std::io; fn print_hello(input: \u0026amp;str) { println!(\u0026#34;Hello, {}!\u0026#34;, input); } fn main() { println!(\u0026#34;Enter your name:\u0026#34;); let mut input = String::new(); io::stdin().read_line(\u0026amp;mut input).expect(\u0026#34;Failed to read input\u0026#34;); let input = input.trim(); print_hello(input); } I have no idea how to even attempt to read Rust code. But I will try to learn as I go. Compared to our previous script:\nWe are using a mut for mutable declaration We have error catch statement via expect We are running a trim operation which strips whitespaces of input string. Initiate a Rust project with:\ncargo new hello Running the script:\ncargo run For release build:\ncargo build --release Go Time for Go.\npackage main import ( \u0026#34;bufio\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;os\u0026#34; ) func printHello(input string) { fmt.Printf(\u0026#34;Hello, %s!\\n\u0026#34;, input) } func main() { reader := bufio.NewReader(os.Stdin) fmt.Println(\u0026#34;Enter your name:\u0026#34;) input, _ := reader.ReadString(\u0026#39;\\n\u0026#39;) input = input[:len(input)-1] printHello(input) } Why the heck are we importing bufio? I asked ChatGPT that and it said sorry and gave me this:\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;os\u0026#34; ) func printHello(input string) { fmt.Printf(\u0026#34;Hello, %s!\\n\u0026#34;, input) } func main() { var input string fmt.Println(\u0026#34;Enter your name:\u0026#34;) _, err := fmt.Scanln(\u0026amp;input) if err != nil { fmt.Println(\u0026#34;Error reading input:\u0026#34;, err) os.Exit(1) } printHello(input) } This looks more okay to me.\nSo, Running this:\ngo run .\\hello.go Building for release.\ngo build -ldflags \u0026#34;-s -w\u0026#34; .\\hello.go TLDR Rank Language Description size 🦀 Rust Good code, but no idea what I am reading. 167 KB 👑 Nim Not popular enough to have good AI generated code. 176 KB 🐀 Go Bigger executable file, and moderately bad AI generated code. 1,420 KB If you are going to learn a language, pick a popular one with lots of answers on the web.\n","date":"2023-07-08","permalink":"https://anyfactor.github.io/posts/making_a_hello_world_executable_in_3_language/","tags":["programming"],"title":"Learning with ChatGPT: a 'Hello World' executable in Nim, Go and Rust"},{"content":"Minimalism for the sake of minimalism is an agenda.\nI was once \u0026ldquo;minimalism-pilled\u0026rdquo; about the state of modern web development. The JavaScript bloat and syntax overload in the industry made me bitter and cynical. In pursuit of the good-ol\u0026rsquo; days of minimalist internet, I decided to build my own static site generator using Jinja and classless CSS.\nI enjoyed tinkering with it and would recommend that everyone build their own. This intention behind building my own static site generator was shared among the JavaScript and cloud haters of the internet. I\u0026rsquo;d rather build something myself than try to understand the syntax behind Nuxt Pages/Markdown. It\u0026rsquo;s a valid point.\nThe end goal is simple: why should I have to learn a new thing just to have a website on the internet?\nHTML is not a writing language Initially, I didn\u0026rsquo;t want to use Markdown and opted to use HTML. However, the core intention of having a website is to share my rants and vents. Dropping those \u0026lt;p\u0026gt; tags every paragraph got in my way, so I added a markdown parser to the static site generator. Minimalism for the win. I would tweak the site every now and then, but I was never really satisfied with how it looked. But I didn\u0026rsquo;t want to dive into CSS to fix it.\n👏 Minimalism 👏 Does 👏Not 👏Trump 👏 Utility 👏 Last week, I tried out Hugo, and it was so damn easy to use. They have a great library of themes that you can hook up in a second. You can get started in under 20-30 minutes. Hosting can be on GitHub Pages, Netlify, or Cloudflare Pages, and they are free*. I tried Jekyll, Nuxt, and I think Gatsby as well. I didn\u0026rsquo;t like any of them, but Hugo was like magic.\nEven with my crappy static generator, I still had to use Markdown. Having the friction of writing things in HTML instead of Markdown or using a CMS is not a good thing. You shouldn\u0026rsquo;t compromise ease of use in the pursuit of minimalism; that isn\u0026rsquo;t practical. That is called an agenda.\nUse What You Like If you want to use a CMS, the Netlify CMS + Hugo template should be an easier solution. Also, Hokus CMS seems quite promising as well.\nIn the current state of the internet, prioritize ease of use above all to get your ideas across the internet.\n","date":"2023-07-05","permalink":"https://anyfactor.github.io/posts/just_use_html_dummy_dummy/","tags":["rant"],"title":"'Just use HTML+CSS, dummy' - Dummy"},{"content":"Any role that has a direct business goal that doesn\u0026rsquo;t involve full time programming to build the product.\nProgramming is done to understand the product, to communicate the features of the product, to better assist engineering teams, and to guide customers (and their developers). Programming represents less than 20% of the daily responsibilites.\nRoles Revenue side:\nCustomer Success Engineer Solutions Architect Sales Engineer Support side:\nTechnical Support Engineer Developer as a customer/stakeholder:\nDeveloper Evangelist/Advocate or DevRel Technical Community Manager Technical Content Writer Product side:\nProduct Manager who wants to get their hands dirty Product Marketing Manager who wants to get their hands dirty What makes these roles special I believe that there is a special breed of folks out there who are usually self-taught programmers and who enjoy both coding and the business side of things. These roles could be perfect for you as they bring together the best of both worlds\nAs a self-taught developer, I honestly cannot see myself working in a full-time programming environment, nor am I comfortable with revenue or management roles where I don\u0026rsquo;t get to work closely with the product team. Programming, to me, is like magic, while business operations feel quite natural and impactful on an organizational scale. By being on the business side, I know how I am impacting the company, how our product is being used by customers, and I can incorporate ideas directly into our product while being conscious about the engineering investments, timelines, and realities.\nFor my personality, I do not believe in a strong hard line between technical and non-technical departments. I think that if I draw lines like that, as a business team guy, I will fail to empathize with the folks who keep the business running, and as a programmer, I will forget who I am working for at the end of the day: the customers and developers using our product.\nI understand that there are rockstar sales folks and engineering wizards who just want to focus on their stuff uninterrupted and make significant impacts to the organization. But yeah, I am not that kind of guy, and maybe you are not as well.\n","date":"2023-07-04","permalink":"https://anyfactor.github.io/posts/business_programming_hybrid/","tags":["business"],"title":"Business programming hybrid roles: The best of both world"},{"content":"Do I still hate Javascript? And yes, Deno is still Javascript don\u0026rsquo;t let anyone fool ya.\n\u0026hellip; I just need zero dependency binary executables. So, let\u0026rsquo;s mistake ourselves to create a Hello World binary executable for Windows with 🌈 Deno 🌈.\nI am just following the basic getting started stuff from the Deno site. Don\u0026rsquo;t expect to learn something new here.\nWith high hopes I begin\u0026hellip;. 🔗 https://deno.land/manual@v1.34.3/getting_started/installation\nUsing Windows 10 here. So, will install with chocolatey:\nchoco install deno By the way, Deno using Docker is super easy to use as well: https://github.com/denoland/deno_docker#run-locally\nAfter installtion, first step:\nCreated a file:\nfirst_steps.ts\nconsole.log(\u0026#34;Welcome to Deno!\u0026#34;); Then I ran it with:\ndeno run .\\first_steps.ts And it works. 🌈\nNow, does it work with deno compile? Yes, yes it does. The exe file size is only 75 megabyte\u0026hellip;. SEVENTY FIVE MEGABYTES! And there goes this entire experiment. :/\nOkay let\u0026rsquo;s try this \u0026ldquo;experiment\u0026rdquo; with Nim \u0026hellip;the best ever programming language that nobody uses.\nUsing Chocolatey again because adding stuff to PATH on Windows is annoying.\n🔗 https://community.chocolatey.org/packages/nim\nThis install MINGW. I should have started this experiment with a Docker Ubuntu container\u0026hellip;.. But we are in too deep now.\nSo, compiling this stupid helloworld program:\necho \u0026#34;Hello World!\u0026#34; With:\nnim c -r helloworld.nim And guess the size. It is only, 175 KB! Geez! And it works on Windows as is! What kind of magic is this!!\nBut nobody even heard of Nim. Everyone uses Go Okay time for Go. Using chocolatey.\nWith Go I have start with creating a Module first. That deducts one point already. With Nim you don\u0026rsquo;t need that.\ngo mod init example/hello Then, stupid hello.go\npackage main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, World!\u0026#34;) } Then building that:\ngo build . The executable is about 2 MB. So still behind Nim.\nAnd finally freaking, Rust \u0026hellip;because all the cool kids use it!\nWe are going to not use Chocolatey this time. Rust has it\u0026rsquo;s own weird installation ritual process on Windows. Because you need Visual Studio to download some C compiler or something.\nfn main() { println!(\u0026#34;Hello, World!\u0026#34;); } Building the binary:\nrustc hello.rs And the executable\u0026rsquo;s size is 159 KB.\nThen finally Python \u0026hellip; because why not? Using Pyinstaller here.\n🔗 https://pyinstaller.org/en/stable/usage.html\nprint(\u0026#34;How is this thing still going?\u0026#34;) Build command:\npyinstaller .\\goodbye.py Ahhhh\u0026hellip;. where is the executable. There is a bunch of files on two directories. The goal is to create single file zero dependency executable not this mess.\nLet\u0026rsquo;s try with --onefile:\npyinstaller --onefile .\\goodbye.py Now, we have what we needed. The executable size is 6.7 MB which is:\nTLDR Not using Deno, duh. So, the stats for Singlefile Binary Executables With Zero Dependency for Windows or as I like to call it, SBEWZDW\nRank Language Size 🦀 Rust 159 KB 👑 Nim 175 KB 🐀 Go 1,925 KB 🐍 Python (With Pyinstaller) 6,784 KB 🐱‍🐉 Deno 75,099 KB Even though you can say, Deno isn\u0026rsquo;t made to for making SBEWZDW. But having a native compile command says something else. Python doesn\u0026rsquo;t have anything, even with non-built-in library it was able to create an executable with a smaller footprint. So, I am skipping Deno for now.\nFollowup: Rust executable file size Commands I ran to build the executable:\ncommand size rustc main.rs 159 KB cargo build --release 156 KB rustc -C debuginfo=0 -C opt-level=3 156 KB Version info:\nRustC version: rustc 1.70.0 (90c541806 2023-05-31) Cargo version: cargo 1.70.0 (ec8a8a0ca 2023-04-25) I am using Windows 10. I installed Rust with Rustup and Visual Studio C++ distribution.\nMy code, standard boilerplate created with cargo new\nfn main() { println!(\u0026#34;Hello, world!\u0026#34;); } I decompiled the executable using this site: https://dogbolt.org/. The Hex-Rays version ran for me but not the other ones.\nHere is the C++ code if you want to check it out:\nhttps://gist.github.com/anyfactor/5ad2fd078c4ad6a9e49783cf6aed33c8\n","date":"2023-07-04","permalink":"https://anyfactor.github.io/posts/from_zero_to_deno_compile/","tags":["programming","rant"],"title":"From zero to `deno compile` then back to zero"},{"content":"There are no hosting company offers a VPS for free. Hosting anything on the web should atleast have some costs associated with them. But why are there free hosting services?\nThe impact of Heroku The hacker (as in indie hacker) community was shocked when Heroku closed down their free hosting tier. Heroku had essentially acted as the backbone for all MVPs and bootstrapped projects on the internet. It truly was a fascinating platform. Although it was never seen as a scalable platform, Heroku helped take out the hassles of deployments. You probably wouldn\u0026rsquo;t build a 6-digit MRR SaaS platform on top of Heroku, but Heroku was there to get you to that point. The love for Heroku is palpable in the IndieHacking community.\nMost people blamed Salesforce when they heard that Heroku was going to shut down the free tier. But it doesn\u0026rsquo;t feel like it was unexpected. Heroku offered 3 serverless computation projects with only an email-based signup. The CC was required only when you wanted to use the Postgres DB or anything from the marketplace. How is that sustainable?\nSoftware business does not have zero marginal variable cost Nothing is free. Even in a software business where the distribution of software theoretically has zero dollars in marginal costs in production, there are bandwidth, infrastructure costs, and business costs. Moreover, there is the KPI-driven ambition cost that comes with the number of free account signups (I will talk about this in another rant). Also economies of scale works both ways, you need downsize when the production goes down. Even at the cent level, there is something. It is in no way practical to have an infinitely bidrectional scalable software company.\nI honestly don\u0026rsquo;t think modern feature-pursuing software companies fit the bill of theoretical software companies with infinite economies of scale. The number of things that break due to scaling is absurd. And things breaking directly affect the reputation and the bottom line of a company. No product on the market is unique; everyone has competitors. For the average company, the moat is essentially their reputation.\nHosting companies are not even software companies I understand the \u0026ldquo;reputational\u0026rdquo; aspect of growing a business. As I just described, reputation is essentially a moat. However, modern \u0026ldquo;deploy from containers\u0026rdquo; hosting services don\u0026rsquo;t have any barriers to switching. You have a container and a YAML file, and you can easily move to the next competitor. Nothing is holding individuals from migrating to another competitor or, God forbid, paying money to that competitor! But you can\u0026rsquo;t make migration policies harder through fine print in policy terms or in engineering terms. Engineers are a different breed, and they won\u0026rsquo;t accept that (another rant).\nBut that is even true for \u0026ldquo;software\u0026rdquo; companies. Hosting companies themselves represent \u0026ldquo;hardware\u0026rdquo; companies because the value proposition is based on their \u0026ldquo;servers\u0026rdquo;. Replicating software business theory doesn\u0026rsquo;t make sense because there is something tangible associated with every user they onboard. Don\u0026rsquo;t you think some PM in a hosting company came across this issue that essentially says, \u0026ldquo;We need more servers because of the free account sign-ups\u0026rdquo;? The PM will smooth out the edges and communicate that to the director or C-suite in a way that doesn\u0026rsquo;t sound negative. Maybe they will phrase this situation in the classic \u0026ldquo;For a growing company, costs like this are good.\u0026rdquo;\nWho pays for the free accounts So, how do modern hosting companies make money? They probably don\u0026rsquo;t. You\u0026rsquo;ll see. Even though they might offer a free account now, they might even ask for a credit card. Even with that it is simply not sustainable. Because a free account costs money. And if you ask how much money it costs, they have to justify that to the other paying customers, because in a normally functioning business, the paying customers are paying for the free customers. That is called Free Rider Problem.\nNo rational customer would accept that. So, who is paying for these free accounts? VCs and investors. And there is a problem at that point. Even though you can convince a handful of paying customers of the idea of community and sharing their bounty, VCs are capitalists in nature. At some point, they need their money, and they consider these costs as investments. They think maybe it builds a moat or something. But does it truly? At a certain point, someone is going to go through the accounting book and pull the plug. That is how things work.\nModern hosting services, no matter how much innovation they are doing in terms of software, are paying for something. They have significant and attachable costs to every account that signs up. Moreover, as they grow, their spam control systems diminish. So, the barrage of free accounts does not justify the cost of having a free account. Even though there is a free lunch and all, there is no free lunch with modern hosting services that do deployments from containers. Customers are not bound to a modern hosting service.\nYou can\u0026rsquo;t grow a hosting business without free accounts At the end of the day, is it possible to have free accounts somehow? The industry demands free accounts. That is the culture. Hosting companies need to focus on cost minimization engineering more than featuring engineering. In this industry customers are willing to pay extra to have something stable and companies need to create solutions that can help them keep their cost per customer low.\nThis rant applies to AI companies as well.\n","date":"2023-07-02","permalink":"https://anyfactor.github.io/posts/do_modern_hosting_services_have_a_sustainable_business_model/","tags":["business"],"title":"Do modern hosting services have a sustainable business model?"},{"content":"A laundry list of things I need to do get this site up and running\nUsing obsidian as rich text editor. ✅ Setup the site (duh) Setting up the Hugo site ✅ Writing a powershell script to run the publish commands in sequence Powershell script for Hugo Git deployment ✅ Completing the site setup with respect to the theme and adding content hugo new should have metadata and \u0026lt;!--more--\u0026gt; present Figure out SEO stuff: Perfect SEO Meta Tags with Hugo Better post linking somehow 🤔. Writing link markdown is tedius, dropping a link should have title with post link hyperlinked Maybe a infinite scrolling blog page? ","date":"2023-07-02","permalink":"https://anyfactor.github.io/posts/hugo_site_tasks/","tags":["hugo"],"title":"Improving this Hugo site"},{"content":"Using ChatGPT I created a simple powershell script for deploying the site.\nGoal Take a commit message Generate the static webpages Commit+Publish the static webpages to the prod repo on the public directory that is a submodule Goes back to the root directory (dev repo) and pushes that to origin as well. Pro0mpting Basic prompt as a starter\u0026hellip;\ncreate a simple powershell script that takes an input an adds \u0026ldquo;Hello\u0026rdquo; to it\nSo it works\na script that that takes a commit message, the git adds, commits and pushes the repo. Then cds into the \u0026ldquo;public\u0026rdquo; directory and does the same.\nAlmost there\nBefore running the git commit on the root directory it runs hugo -t fuji\nSome minor fixes Variable declaration needed to be fixed: \u0026quot;....$command:\u0026quot; → \u0026quot;....'$command':\u0026quot; Need to commit the submodule git repo first, then to the root directory And that\u0026rsquo;s about it git_publish.ps1\n# Function to execute Git commands function Invoke-GitCommand { param ( [Parameter(Mandatory=$true)] [string]$Command ) $output = git $Command 2\u0026gt;\u0026amp;1 if ($LASTEXITCODE -ne 0) { Write-Host \u0026#34;Error executing git \u0026#39;$Command\u0026#39;:\u0026#34; Write-Host $output exit 1 } } # Prompt for commit message $commitMessage = Read-Host \u0026#34;Enter the commit message\u0026#34; # Execute `hugo -t fuji` command hugo -t fuji # Change directory to \u0026#34;public\u0026#34; Set-Location \u0026#34;public\u0026#34; # Git commands for the \u0026#34;public\u0026#34; directory git add -A git commit -m $commitMessage git push # Change directory to \u0026#34;root\u0026#34; Set-Location .. # Git commands for the root directory git add -A git commit -m $commitMessage git push You run .\\git_publish.ps1 and give the commit message and then it just works.\n","date":"2023-07-02","permalink":"https://anyfactor.github.io/posts/powershell_script_for_git_deployment/","tags":["hugo","chatgpt"],"title":"Powershell script for Hugo Git deployment"},{"content":"Video summary (in bullet points) of Creating a Blog with Hugo and Github in 10 minutes by Ryan Schachte\nSetup Create two repository: One for our Hugo code, your development repo, we will be calling this the dev repo Another for the deployed static rendered webpages, the production repo: \u0026lt;name_of_the_site\u0026gt;.github.io, we will be calling this the prod repo Hugo Stuff I will be installing Hugo in Windows 10, using chocolatey: choco install hugo-extended clone the dev repo and cd into that Create the hugo site there with hugo new site \u0026lt;name_of_the_site\u0026gt; [0] cd into the newly created \u0026lt;name_of_the_site\u0026gt; directory Selecting a theme From your web browser, choose a theme from here: https://themes.gohugo.io/ Follow the instructions to install the theme [1] Edit the hugo.toml file: baseURL = \u0026#34;https://anyfactor.github.io/\u0026#34; languageCode = \u0026#34;en-us\u0026#34; title = \u0026#34;Anyfactor\u0026#39;s blog\u0026#34; theme = \u0026#34;fuji\u0026#34; I am using the fuji theme\nDevelopment preview: hugo server Creating a new post: hugo new posts/\u0026lt;name_of_post\u0026gt;.md Edit the markdown blog post. Remove draft: true from the metadata section. Add the tags and description metadata. Deployment Adding the production site repo: Have atleast one commit on the prod repo for further future commits. You can clone the repo, run touch README.md and push the main branch. On the dev repo add the prod repo as a submodule: git submodule add -b main \u0026lt;prod_repo_url\u0026gt; public. [2] The above command will bring the main branch of the prod_repo to the public directory The public directory will contain the rendedred static webpages. When you render the static webpages the prod_repo contents will be written. Then you can push rendered static webpages to the web. To generate the static files into the public directory: hugo -t fuji. -t stands for theme. cd into the public directory where prod repo website lives. Git add → commit → push to publish the new site. cd back into the previous (/root) directory. Git add → commit → push the dev repo. Notes [0] Create site first then add git\nCreate the site first, then inti the git repo there.\n[1] Installing Fuji Theme [Repo]\nAdding the theme: git submodule add https://github.com/dsrkafuu/hugo-theme-fuji.git themes/fuji Summary splitting. Add the summary section then add \u0026lt;!--more--\u0026gt; then the main content : https://github.com/dsrkafuu/hugo-theme-fuji#-notice Sample post metadata: title: \u0026#34;Setting up Hugo\u0026#34;\rdate: 2023-07-01T23:06:13+06:00\rdescription: \u0026#34;Creating a new hugo site using Ryan Schachte\u0026#39;s tutorial\u0026#34;\rtags: [\u0026#39;hugo\u0026#39;] [2] master vs main\nI need to declare the master branch here as my prod repo is older.\n","date":"2023-07-01","permalink":"https://anyfactor.github.io/posts/setting_up_hugo/","tags":["hugo"],"title":"Setting up Hugo"}]