[{"content":"Any role that has a direct business goal that doesn\u0026rsquo;t involve full time programming to build the product.\nProgramming is done to understand the product, to communicate the features of the product, to better assist engineering teams, and to guide customers (and their developers). Programming represents less than 20% of the daily responsibilites.\nRevenue side:\nCustomer Success Engineer Solutions Architect Sales Engineer Support side:\nTechnical Support Engineer Developer as a customer/stakeholder:\nDeveloper Evangelist/Advocate or DevRel Technical Community Manager Technical Content Writer Product side:\nProduct Manager who wants to get their hands dirty Product Marketing Manager who wants to get their hands dirty ","date":"2023-07-04","permalink":"https://anyfactor.github.io/posts/business_programming_hybrid/","tags":["business"],"title":"Business programming hybrid roles"},{"content":"Do I still hate Javascript? And yes, Deno is still Javascript don\u0026rsquo;t let anyone fool ya.\n\u0026hellip; I just need zero dependency binary executables. So, let\u0026rsquo;s mistake ourselves to create a Hello World binary executable for Windows with üåà Deno üåà.\nI am just following the basic getting started stuff from the Deno site. Don\u0026rsquo;t expect to learn something new here.\nWith high hopes I begin\u0026hellip;. üîó https://deno.land/manual@v1.34.3/getting_started/installation\nUsing Windows 10 here. So, will install with chocolatey:\nchoco install deno By the way, Deno using Docker is super easy to use as well: https://github.com/denoland/deno_docker#run-locally\nAfter installtion, first step:\nCreated a file:\nfirst_steps.ts\nconsole.log(\u0026#34;Welcome to Deno!\u0026#34;); Then I ran it with:\ndeno run .\\first_steps.ts And it works. üåà\nNow, does it work with deno compile? Yes, yes it does. The exe file size is only 75 megabyte\u0026hellip;. SEVENTY FIVE MEGABYTES! And there goes this entire experiment. :/\nOkay let\u0026rsquo;s try this \u0026ldquo;experiment\u0026rdquo; with Nim \u0026hellip;the best ever programming language that nobody uses.\nUsing Chocolatey again because adding stuff to PATH on Windows is annoying.\nüîó https://community.chocolatey.org/packages/nim\nThis install MINGW. I should have started this experiment with a Docker Ubuntu container\u0026hellip;.. But we are in too deep now.\nSo, compiling this stupid helloworld program:\necho \u0026#34;Hello World!\u0026#34; With:\nnim c -r helloworld.nim And guess the size. It is only, 175 KB! Geez! And it works on Windows as is! What kind of magic is this!!\nBut nobody even heard of Nim. Everyone uses Go Okay time for Go. Using chocolatey.\nWith Go I have start with creating a Module first. That deducts one point already. With Nim you don\u0026rsquo;t need that.\ngo mod init example/hello Then, stupid hello.go\npackage main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, World!\u0026#34;) } Then building that:\ngo build . The executable is about 2 MB. So still behind Nim.\nAnd finally freaking, Rust \u0026hellip;because all the cool kids use it!\nWe are going to not use Chocolatey this time. Rust has it\u0026rsquo;s own weird installation ritual process on Windows. Because you need Visual Studio to download some C compiler or something.\nfn main() { println!(\u0026#34;Hello, World!\u0026#34;); } Building the binary:\nrustc hello.rs And the executable\u0026rsquo;s size is 159 KB.\nThen finally Python \u0026hellip; because why not? Using Pyinstaller here.\nüîó https://pyinstaller.org/en/stable/usage.html\nprint(\u0026#34;How is this thing still going?\u0026#34;) Build command:\npyinstaller .\\goodbye.py Ahhhh\u0026hellip;. where is the executable. There is a bunch of files on two directories. The goal is to create single file zero dependency executable not this mess.\nLet\u0026rsquo;s try with --onefile:\npyinstaller --onefile .\\goodbye.py Now, we have what we needed. The executable size is 6.7 MB which is:\nTLDR Not using Deno, duh. So, the stats for Singlefile Binary Executables With Zero Dependency for Windows or as I like to call it, SBEWZDW\nRank Language Size ü¶Ä Rust 159 KB üëë Nim 175 KB üêÄ Go 1,925 KB üêç Python (With Pyinstaller) 6,784 KB üê±‚Äçüêâ Deno 75,099 KB Even though you can say, Deno isn\u0026rsquo;t made to for making SBEWZDW. But having a native compile command says something else. Python doesn\u0026rsquo;t have anything, even with non-built-in library it was able to create an executable with a smaller footprint. So, I am skipping Deno for now.\n","date":"2023-07-04","permalink":"https://anyfactor.github.io/posts/from_zero_to_deno_compile/","tags":["cli","rant"],"title":"From zero to `deno compile` then back to zero"},{"content":"There are no hosting company offers a VPS for free. Hosting anything on the web should atleast have some costs associated with them. But why there are free hosting services?\nThe impact of Heroku The hacker (as in indie hacker) community was shocked when Heroku closed down their free hosting tier. Heroku had essentially acted as the backbone for all MVPs and bootstrapped projects on the internet. It truly was a fascinating platform. Although it was never seen as a scalable platform, Heroku helped take out the hassles of deployments. You probably wouldn\u0026rsquo;t build a 6-digit MRR SaaS platform on top of Heroku, but Heroku was there to get you to that point. The love for Heroku is palpable in the IndieHacking community.\nMost people blamed Salesforce when they heard that Heroku was going to shut down the free tier. But it doesn\u0026rsquo;t feel like it was unexpected. Heroku offered 3 serverless computation projects with only an email-based signup. The CC was required only when you wanted to use the Postgres DB or anything from the marketplace. How is that sustainable?\nSoftware business does not have zero marginal variable cost Nothing is free. Even in a software business where the distribution of software theoretically has zero dollars in marginal costs in production, there are bandwidth, infrastructure costs, and business costs. Moreover, there is the KPI-driven ambition cost that comes with the number of free account signups (I will talk about this in another rant). Also economies of scale works both ways, you need downsize when the production goes down. Even at the cent level, there is something. It is in no way practical to have an infinitely bidrectional scalable software company.\nI honestly don\u0026rsquo;t think modern feature-pursuing software companies fit the bill of theoretical software companies with infinite economies of scale. The number of things that break due to scaling is absurd. And things breaking directly affect the reputation and the bottom line of a company. No product on the market is unique; everyone has competitors. For the average company, the moat is essentially their reputation.\nHosting companies are not even software companies I understand the \u0026ldquo;reputational\u0026rdquo; aspect of growing a business. As I just described, reputation is essentially a moat. However, modern \u0026ldquo;deploy from containers\u0026rdquo; hosting services don\u0026rsquo;t have any barriers to switching. You have a container and a YAML file, and you can easily move to the next competitor. Nothing is holding individuals from migrating to another competitor or, God forbid, paying money to that competitor! But you can\u0026rsquo;t make migration policies harder through fine print in policy terms or in engineering terms. Engineers are a different breed, and they won\u0026rsquo;t accept that (another rant).\nBut that is even true for \u0026ldquo;software\u0026rdquo; companies. Hosting companies themselves represent \u0026ldquo;hardware\u0026rdquo; companies because the value proposition is based on their \u0026ldquo;servers\u0026rdquo;. Replicating software business theory doesn\u0026rsquo;t make sense because there is something tangible associated with every user they onboard. Don\u0026rsquo;t you think some PM in a hosting company came across this issue that essentially says, \u0026ldquo;We need more servers because of the free account sign-ups\u0026rdquo;? The PM will smooth out the edges and communicate that to the director or C-suite in a way that doesn\u0026rsquo;t sound negative. Maybe they will phrase this situation in the classic \u0026ldquo;For a growing company, costs like this are good.\u0026rdquo;\nWho pays for the free accounts So, how do modern hosting companies make money? They probably don\u0026rsquo;t. You\u0026rsquo;ll see. Even though they might offer a free account now, they might even ask for a credit card. Even with that it is simply not sustainable. Because a free account costs money. And if you ask how much money it costs, they have to justify that to the other paying customers, because in a normally functioning business, the paying customers are paying for the free customers. That is called Free Rider Problem.\nNo rational customer would accept that. So, who is paying for these free accounts? VCs and investors. And there is a problem at that point. Even though you can convince a handful of paying customers of the idea of community and sharing their bounty, VCs are capitalists in nature. At some point, they need their money, and they consider these costs as investments. They think maybe it builds a moat or something. But does it truly? At a certain point, someone is going to go through the accounting book and pull the plug. That is how things work.\nModern hosting services, no matter how much innovation they are doing in terms of software, are paying for something. They have significant and attachable costs to every account that signs up. Moreover, as they grow, their spam control systems diminish. So, the barrage of free accounts does not justify the cost of having a free account. Even though there is a free lunch and all, there is no free lunch with modern hosting services that do deployments from containers. Customers are not bound to a modern hosting service.\nYou can\u0026rsquo;t grow a hosting business without free accounts At the end of the day, is it possible to have free accounts somehow? The industry demands free accounts. That is the culture. Hosting companies need to focus on cost minimization engineering more than featuring engineering. In this industry customers are willing to pay extra to have something stable and companies need to create solutions that can help them keep their cost per customer low.\nThis rant applies to AI companies as well.\n","date":"2023-07-02","permalink":"https://anyfactor.github.io/posts/do_modern_hosting_services_have_a_sustainable_business_model/","tags":["rant"],"title":"Do modern hosting services have a sustainable business model?"},{"content":"A laundry list of things I need to do get this site up and running\n‚úÖ Setup the site (duh) Setting up the Hugo site ‚úÖ Writing a powershell script to run the publish commands in sequence Powershell script for Hugo Git deployment Completing the site setup with respect to the theme and adding content hugo new should have metadata and \u0026lt;!--more--\u0026gt; present Figure out SEO stuff: Perfect SEO Meta Tags with Hugo Better post linking somehow ü§î. Writing link markdown is tedius, dropping a link should have title with post link hyperlinked Maybe a infinite scrolling blog page? ","date":"2023-07-02","permalink":"https://anyfactor.github.io/posts/hugo_site_tasks/","tags":["hugo"],"title":"Improving this Hugo site"},{"content":"Using ChatGPT I created a simple powershell script for deploying the site.\nGoal Take a commit message Generate the static webpages Commit+Publish the static webpages to the prod repo on the public directory that is a submodule Goes back to the root directory (dev repo) and pushes that to origin as well. Pro0mpting Basic prompt as a starter\u0026hellip;\ncreate a simple powershell script that takes an input an adds \u0026ldquo;Hello\u0026rdquo; to it\nSo it works\na script that that takes a commit message, the git adds, commits and pushes the repo. Then cds into the \u0026ldquo;public\u0026rdquo; directory and does the same.\nAlmost there\nBefore running the git commit on the root directory it runs hugo -t fuji\nSome minor fixes Variable declaration needed to be fixed: \u0026quot;....$command:\u0026quot; ‚Üí \u0026quot;....'$command':\u0026quot; Need to commit the submodule git repo first, then to the root directory And that\u0026rsquo;s about it git_publish.ps1\n# Function to execute Git commands function Invoke-GitCommand { param ( [Parameter(Mandatory=$true)] [string]$Command ) $output = git $Command 2\u0026gt;\u0026amp;1 if ($LASTEXITCODE -ne 0) { Write-Host \u0026#34;Error executing git \u0026#39;$Command\u0026#39;:\u0026#34; Write-Host $output exit 1 } } # Prompt for commit message $commitMessage = Read-Host \u0026#34;Enter the commit message\u0026#34; # Execute `hugo -t fuji` command hugo -t fuji # Change directory to \u0026#34;public\u0026#34; Set-Location \u0026#34;public\u0026#34; # Git commands for the \u0026#34;public\u0026#34; directory git add -A git commit -m $commitMessage git push # Change directory to \u0026#34;root\u0026#34; Set-Location .. # Git commands for the root directory git add -A git commit -m $commitMessage git push You run .\\git_publish.ps1 and give the commit message and then it just works.\n","date":"2023-07-02","permalink":"https://anyfactor.github.io/posts/powershell_script_for_git_deployment/","tags":["hugo","chatgpt"],"title":"Powershell script for Hugo Git deployment"},{"content":"Video summary (in bullet points) of Creating a Blog with Hugo and Github in 10 minutes by Ryan Schachte\nSetup Create two repository: One for our Hugo code, your development repo, we will be calling this the dev repo Another for the deployed static rendered webpages, the production repo: \u0026lt;name_of_the_site\u0026gt;.github.io, we will be calling this the prod repo Hugo Stuff I will be installing Hugo in Windows 10, using chocolatey: choco install hugo-extended clone the dev repo and cd into that Create the hugo site there with hugo new site \u0026lt;name_of_the_site\u0026gt; [0] cd into the newly created \u0026lt;name_of_the_site\u0026gt; directory Selecting a theme From your web browser, choose a theme from here: https://themes.gohugo.io/ Follow the instructions to install the theme [1] Edit the hugo.toml file: baseURL = \u0026#34;https://anyfactor.github.io/\u0026#34; languageCode = \u0026#34;en-us\u0026#34; title = \u0026#34;Anyfactor\u0026#39;s blog\u0026#34; theme = \u0026#34;fuji\u0026#34; I am using the fuji theme\nDevelopment preview: hugo server Creating a new post: hugo new posts/\u0026lt;name_of_post\u0026gt;.md Edit the markdown blog post. Remove draft: true from the metadata section. Add the tags and description metadata. Deployment Adding the production site repo: Have atleast one commit on the prod repo for further future commits. You can clone the repo, run touch README.md and push the main branch. On the dev repo add the prod repo as a submodule: git submodule add -b main \u0026lt;prod_repo_url\u0026gt; public. [2] The above command will bring the main branch of the prod_repo to the public directory The public directory will contain the rendedred static webpages. When you render the static webpages the prod_repo contents will be written. Then you can push rendered static webpages to the web. To generate the static files into the public directory: hugo -t fuji. -t stands for theme. cd into the public directory where prod repo website lives. Git add ‚Üí commit ‚Üí push to publish the new site. cd back into the previous (/root) directory. Git add ‚Üí commit ‚Üí push the dev repo. Notes [0] Create site first then add git\nCreate the site first, then inti the git repo there.\n[1] Installing Fuji Theme [Repo]\nAdding the theme: git submodule add https://github.com/dsrkafuu/hugo-theme-fuji.git themes/fuji Summary splitting. Add the summary section then add \u0026lt;!--more--\u0026gt; then the main content : https://github.com/dsrkafuu/hugo-theme-fuji#-notice Sample post metadata: title: \u0026#34;Setting up Hugo\u0026#34; date: 2023-07-01T23:06:13+06:00 description: \u0026#34;Creating a new hugo site using Ryan Schachte\u0026#39;s tutorial\u0026#34; tags: [\u0026#39;hugo\u0026#39;] [2] master vs main\nI need to declare the master branch here as my prod repo is older.\n","date":"2023-07-01","permalink":"https://anyfactor.github.io/posts/setting_up_hugo/","tags":["hugo"],"title":"Setting up Hugo"}]